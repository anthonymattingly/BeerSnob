@model BeerSnob.Models.Beer

@{

    ViewBag.Title = "Edit";
}

<h2>Make a mistake?  Fix it here</h2>

@using (Html.BeginForm())
{
    @Html.HiddenFor(x => x.BeerId)
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @*<h4>Make a mistake?  Fix it here:</h4>*@
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.BeerName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BeerName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BeerName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WhereTried, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.WhereTried, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.WhereTried, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WhenTried, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.WhenTried, "{0:MM-dd-yyyy}", new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.TextBoxFor(model => model.WhenTried, "{0:MM-dd-yyyy}", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.WhenTried, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
            @Html.LabelFor(model => model.StyleOfBeer.StyleOfBeer,"Style", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(s => s.BeerStyleId, ViewBag.BeerStyles as IEnumerable<SelectListItem>, "Select a Style", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.StyleOfBeer.StyleOfBeer, "", new { @class = "text-danger" })
        </div>
        </div>


    <div class="form-group">
        @Html.LabelFor(model => model.PercentABV, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PercentABV, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PercentABV, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description,"Updated description:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save Changes" class="btn btn-primary" />
        </div>
    </div>
</div>


}

<div>
    @Html.ActionLink("Cancel(Back to List)", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}